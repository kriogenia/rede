name: Rust CI
permissions:
  contents: read

on:
  workflow_dispatch:
  pull_request:
    types: [opened, labeled, reopened, synchronize, ready_for_review]
    paths:
      - ".github/workflows/ci.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
  push:
    paths:
      - ".github/workflows/ci.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Test rede
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'bin')
        with:
          command: test
          args: -p rede

      - name: Test rede_schema
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'schema')
        with:
          command: test
          args: -p rede_schema

      - name: Test rede_parser
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'parser')
        with:
          command: test
          args: -p rede_parser --all-features

      - name: Test rede_placeholders
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'placeholders')
        with:
          command: test
          args: -p rede_placeholders

  lints:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: clippy rede
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'bin')
        with:
          command: clippy
          args: -p rede -- -D warnings

      - name: clippy rede_schema
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'schema')
        with:
          command: clippy
          args: -p rede_schema -- -D warnings

      - name: clippy rede_parser
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'parser')
        with:
          command: clippy
          args: -p rede_parser --all-features -- -D warnings

      - name: clippy rede_placeholders
        uses: actions-rs/cargo@v1
        if: contains(github.event.pull_request.labels.*.name, 'placeholders')
        with:
          command: clippy
          args: -p rede_placeholders -- -D warnings
